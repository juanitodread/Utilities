Principal git commands

-Git configuration
git config --global user.name "My name"
git config --global user.email mymail@mail.com
git config --global merge.tool /usr/bin/meld
git config --list

-Git help
git help <command>
git <command> --help
man git-<command>

-Create a new repo
git init

-Clone an existing repo
git clone [url]

-Check repo status
git status

-Ignoring files in git
Modify file ".gitignore"

-See "no-added" elements
git diff

-See "added" elements
git diff --cached

-Deleting files
rm myFile.txt
git rm myFile.txt

-Deleting added files
rm myAddedFile.txt
git rm -f myAddedFile.txt

-Revert "add"
git rm --cached myAddedFile.txt

-Rename file
git mv myOldFile myNewFile

-See revisions
git log
git log -p -2
git log -U1 --word-diff
git log --stat
git log --pretty=online
git log --pretty=format:"%h - %an, %ar : %s"
git log --since=2.weeks

-Add forgotten files to last commit
git commit -m "My commit"
git add myMissedFile
git commit --amend

-Revert modifications of a file
git checkout -- myFile

-List remote repos
git remote -v

-Get changes of remote repo
git fetch [remote-repo-name]

-Push to specific remote repo
git push origin [remote-repo-name]

-Pull to specific remote repo (git pull does a git fetch followed by a git merge)
git pull origin [remote-repo-name]

-Inspect remote repo
git remote show origin

-Rename remote repo
git remote rename myOldName myNewName

-Remove remote repo
git remote rm [remote-repo-name]

-List repo tags
git tag

-Create a tag
git tag -a <tag-name> -m 'My comment'

-Create a "fast tag"
git tag <tag-name>

-Tag an old revision
git tag -a <tag-name> -m 'My comment' <old-revision>

-Push a tag into remote server
git push origin <tag-name>

-List branches
git branch
git branch -v
git branch --merged
git branch --no-merged

-Create a branch
git branch <branch-name>

-Move to another branch
git checkout <branch-name>

-Create branch and moving to it
git checkout -b <branch-name>

-Merging branches: myBranch --> master
git checkout master
git merge myBranch

-Delete a branch
git branch -d <branch-name>

-Force to delete an unmerged branch
git branch -D <branch-name>

-Publish a branch
git push origin <branch-name>

-Create a local branch to work based on a remote branch
git checkout -b <local-branch> <remote-branch>
git checkout -b defect1 origin/defect1

-Delete a remote branch after merged it
git push origin :<branch-name>